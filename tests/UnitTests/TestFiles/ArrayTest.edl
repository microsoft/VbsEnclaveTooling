// Copyright (c) Open Enclave SDK contributors.
// Licensed under the MIT License.
// 
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// This file has been modified and adapted from its original
// which was created by Open Enclave.
// File used for testing purposes

enclave
{
    trusted
    {        
        void ArrayChar(
            [in] char a1[2],
            [in, out] char a2[2][2],
            [out] char a3[3][3],
        );

        void ArrayWchar_t(
            [in] wchar_t a1[2],
            [in, out] wchar_t a2[2][2],
            [out] wchar_t a3[3][3],
        );

        void ArrayFloat(
            [in] float a1[2],
            [in,out] float a2[2][2],
            [out] float a3[3][3],
        );

        void ArrayDouble(
            [in] double a1[2],
            [in,out] double a2[2][2],
            [out] double a3[3][3],
        );

        void ArraySize_t(
            [in] size_t a1[2],
            [in,out] size_t a2[2][2],
            [out] size_t a3[3][3],
       
        
        void ArrayInt8_t(
            [in] int8_t a1[2],
            [in,out] int8_t a2[2][2],
            [out] int8_t a3[3][3],
        );
        
        void ArrayInt16_t(
            [in] int16_t a1[2],
            [in,out] int16_t a2[2][2],
            [out] int16_t a3[3][3],
        );

        void ArrayInt32_t(
            [in] int32_t a1[2],
            [in,out] int32_t a2[2][2],
            [out] int32_t a3[3][3],
        );

        void ArrayInt64_t(
            [in] int64_t a1[2],
            [in,out] int64_t a2[2][2],
            [out] int64_t a3[3][3],
        );

        void ArrayUint8_t(
            [in] uint8_t a1[2],
            [in,out] uint8_t a2[2][2],
            [out] uint8_t a3[3][3],
        );
        
        void ArrayUint16_t(
            [in] uint16_t a1[2],
            [in,out] uint16_t a2[2][2],
            [out] uint16_t a3[3][3],
        );

        void ArrayUint32_t(
            [in] uint32_t a1[2],
            [in,out] uint32_t a2[2][2],
            [out] uint32_t a3[3][3],
        );

        void ArrayUint64_t(
            [in] uint64_t a1[2],
            [in,out] uint64_t a2[2][2],
            [out] uint64_t a3[3][3]
        );
    };

    untrusted
    {
        void ArrayChar(
            [in] char a1[2],
            [in, out] char a2[2][2],
            [out] char a3[3][3],
        );

        void ArrayQchar_t(
            [in] wchar_t a1[2],
            [in, out] wchar_t a2[2][2],
            [out] wchar_t a3[3][3],
        );

        void ArrayFloat(
            [in] float a1[2],
            [in,out] float a2[2][2],
            [out] float a3[3][3],
        );

        void ArrayDouble(
            [in] double a1[2],
            [in,out] double a2[2][2],
            [out] double a3[3][3],
        );

        void ArraySize_t(
            [in] size_t a1[2],
            [in,out] size_t a2[2][2],
            [out] size_t a3[3][3],
       
        
        void ArrayInt8_t(
            [in] int8_t a1[2],
            [in,out] int8_t a2[2][2],
            [out] int8_t a3[3][3],
        );
        
        void ArrayInt16_t(
            [in] int16_t a1[2],
            [in,out] int16_t a2[2][2],
            [out] int16_t a3[3][3],
        );

        void ArrayInt32_t(
            [in] int32_t a1[2],
            [in,out] int32_t a2[2][2],
            [out] int32_t a3[3][3],
        );

        void ArrayInt64_t(
            [in] int64_t a1[2],
            [in,out] int64_t a2[2][2],
            [out] int64_t a3[3][3],
        );

        void ArrayUint8_t(
            [in] uint8_t a1[2],
            [in,out] uint8_t a2[2][2],
            [out] uint8_t a3[3][3],
        );
        
        void ArrayUint16_t(
            [in] uint16_t a1[2],
            [in,out] uint16_t a2[2][2],
            [out] uint16_t a3[3][3],
        );

        void ArrayUint32_t(
            [in] uint32_t a1[2],
            [in,out] uint32_t a2[2][2],
            [out] uint32_t a3[3][3],
        );

        void ArrayUint64_t(
            [in] uint64_t a1[2],
            [in,out] uint64_t a2[2][2],
            [out] uint64_t a3[3][3]
        );
    };     
};
