// This file was auto-generated by edlcodegen.exe
// Changes to this file may be lost if the file is regenerated.

#pragma once
#include <VbsEnclaveABI\Shared\VbsEnclaveAbiBase.h>
#include "vbsenclave_flatbuffer_support_generated.h"
#include <VbsEnclaveABI\Shared\ConversionHelpers.h>

namespace CodeGenTest::DeveloperTypes
{

struct TestStruct1;

struct TestStruct2;

struct TestStruct1
{
    std::int64_t int64_val {};
    std::uint64_t uint64_val {};
    std::array<std::int64_t, 5> array1 {};
};

struct TestStruct2
{
    std::unique_ptr<int32_t> int32_ptr {};
    TestStruct1 struct_no_ptr {};
    std::unique_ptr<TestStruct1> struct_ptr {};
};

struct FuncWithAllArgs_0_args
{
    bool m_arg1 {};
    std::unique_ptr<uint32_t> m_arg2 {};
    std::unique_ptr<int32_t> m_arg3 {};
    std::unique_ptr<uint64_t> m_arg4 {};
    TestStruct1 m_arg5 {};
    std::unique_ptr<TestStruct2> m_arg6 {};
    std::vector<TestStruct2> m_arg7 {};
    std::vector<std::int16_t> m_arg8 {};
    std::array<std::wstring, 2> m_arg9 {};
    HRESULT m__return_value_ {};
};

struct FuncWithAllArgs_1_args
{
    bool m_arg1 {};
    std::unique_ptr<uint32_t> m_arg2 {};
    std::unique_ptr<int32_t> m_arg3 {};
    std::unique_ptr<uint64_t> m_arg4 {};
    TestStruct1 m_arg5 {};
    std::unique_ptr<TestStruct2> m_arg6 {};
    std::vector<TestStruct2> m_arg7 {};
    std::vector<std::int16_t> m_arg8 {};
    std::array<std::wstring, 2> m_arg9 {};
    HRESULT m__return_value_ {};
};

}

// Struct metadata
namespace VbsEnclaveABI::Shared::Converters
{

template <>
struct StructMetadata<CodeGenTest::DeveloperTypes::TestStruct1>
{
    static constexpr auto members = std::make_tuple(&CodeGenTest::DeveloperTypes::TestStruct1::int64_val,&CodeGenTest::DeveloperTypes::TestStruct1::uint64_val,&CodeGenTest::DeveloperTypes::TestStruct1::array1);
};

template <>
struct StructMetadata<CodeGenTest::FlatbuffersDevTypes::TestStruct1T>
{
    static constexpr auto members = std::make_tuple(&CodeGenTest::FlatbuffersDevTypes::TestStruct1T::int64_val,&CodeGenTest::FlatbuffersDevTypes::TestStruct1T::uint64_val,&CodeGenTest::FlatbuffersDevTypes::TestStruct1T::array1);
};

template <>
struct StructMetadata<CodeGenTest::DeveloperTypes::TestStruct2>
{
    static constexpr auto members = std::make_tuple(&CodeGenTest::DeveloperTypes::TestStruct2::int32_ptr,&CodeGenTest::DeveloperTypes::TestStruct2::struct_no_ptr,&CodeGenTest::DeveloperTypes::TestStruct2::struct_ptr);
};

template <>
struct StructMetadata<CodeGenTest::FlatbuffersDevTypes::TestStruct2T>
{
    static constexpr auto members = std::make_tuple(&CodeGenTest::FlatbuffersDevTypes::TestStruct2T::int32_ptr,&CodeGenTest::FlatbuffersDevTypes::TestStruct2T::struct_no_ptr,&CodeGenTest::FlatbuffersDevTypes::TestStruct2T::struct_ptr);
};

template <>
struct StructMetadata<CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args>
{
    static constexpr auto members = std::make_tuple(&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m_arg1,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m_arg2,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m_arg3,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m_arg4,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m_arg5,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m_arg6,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m_arg7,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m_arg8,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m_arg9,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_0_args::m__return_value_);
};

template <>
struct StructMetadata<CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT>
{
    static constexpr auto members = std::make_tuple(&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m_arg1,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m_arg2,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m_arg3,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m_arg4,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m_arg5,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m_arg6,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m_arg7,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m_arg8,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m_arg9,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_0_argsT::m__return_value_);
};

template <>
struct StructMetadata<CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args>
{
    static constexpr auto members = std::make_tuple(&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m_arg1,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m_arg2,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m_arg3,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m_arg4,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m_arg5,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m_arg6,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m_arg7,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m_arg8,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m_arg9,&CodeGenTest::DeveloperTypes::FuncWithAllArgs_1_args::m__return_value_);
};

template <>
struct StructMetadata<CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT>
{
    static constexpr auto members = std::make_tuple(&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m_arg1,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m_arg2,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m_arg3,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m_arg4,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m_arg5,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m_arg6,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m_arg7,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m_arg8,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m_arg9,&CodeGenTest::FlatbuffersDevTypes::FuncWithAllArgs_1_argsT::m__return_value_);
};

template <>
struct StructMetadata<CodeGenTest::FlatbuffersDevTypes::AbiRegisterVtl0Callbacks_argsT>
{
    using CallbackArgs = CodeGenTest::FlatbuffersDevTypes::AbiRegisterVtl0Callbacks_argsT;
    static constexpr auto members = std::make_tuple(&CallbackArgs::m_callback_addresses, &CallbackArgs::m_callback_names, &CallbackArgs::m__return_value_);
};

}
